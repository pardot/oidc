// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package corestate

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TokenType int32

const (
	TokenType_UNKNOWN       TokenType = 0
	TokenType_AUTH_CODE     TokenType = 1
	TokenType_ACCESS_TOKEN  TokenType = 2
	TokenType_REFRESH_TOKEN TokenType = 3
)

var TokenType_name = map[int32]string{
	0: "UNKNOWN",
	1: "AUTH_CODE",
	2: "ACCESS_TOKEN",
	3: "REFRESH_TOKEN",
}

var TokenType_value = map[string]int32{
	"UNKNOWN":       0,
	"AUTH_CODE":     1,
	"ACCESS_TOKEN":  2,
	"REFRESH_TOKEN": 3,
}

func (x TokenType) String() string {
	return proto.EnumName(TokenType_name, int32(x))
}

func (TokenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

type AuthRequest_ResponseType int32

const (
	AuthRequest_UNKNOWN AuthRequest_ResponseType = 0
	AuthRequest_CODE    AuthRequest_ResponseType = 1
	AuthRequest_TOKEN   AuthRequest_ResponseType = 2
)

var AuthRequest_ResponseType_name = map[int32]string{
	0: "UNKNOWN",
	1: "CODE",
	2: "TOKEN",
}

var AuthRequest_ResponseType_value = map[string]int32{
	"UNKNOWN": 0,
	"CODE":    1,
	"TOKEN":   2,
}

func (x AuthRequest_ResponseType) String() string {
	return proto.EnumName(AuthRequest_ResponseType_name, int32(x))
}

func (AuthRequest_ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0, 0}
}

// AuthRequest represents that state for an inbound request to auth. It tracks
// this until the Session is started, at which time it is replaced.
//
// It is keyed by a unique identifier for this flow
type AuthRequest struct {
	ClientId             string                   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RedirectUri          string                   `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State                string                   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Scopes               []string                 `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Nonce                string                   `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ResponseType         AuthRequest_ResponseType `protobuf:"varint,6,opt,name=response_type,json=responseType,proto3,enum=deci.corestate.v1beta1.AuthRequest_ResponseType" json:"response_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AuthRequest) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *AuthRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AuthRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *AuthRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *AuthRequest) GetResponseType() AuthRequest_ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return AuthRequest_UNKNOWN
}

// Session represents an authenticated user from the time they are issued a
// code, until their last refresh/access token expires.
type Session struct {
	ClientId string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scopes   []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// metadata is implementation-specific state for this "user". it is threaded
	// through all of the steps in the process. This should contain the
	// information required to serve requests to this service.
	Metadata *any.Any `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The authorization code that was issued for the code flow.
	AuthCode *StoredToken `protobuf:"bytes,4,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
	// The access tokens that have been issued to the end user, keyed by the ID
	AccessTokens map[string]*StoredToken `protobuf:"bytes,5,rep,name=access_tokens,json=accessTokens,proto3" json:"access_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The refresh tokens that have been issued to the end user, keyed by the ID
	RefreshTokens        map[string]*StoredToken `protobuf:"bytes,6,rep,name=refresh_tokens,json=refreshTokens,proto3" json:"refresh_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Session) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Session) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Session) GetAuthCode() *StoredToken {
	if m != nil {
		return m.AuthCode
	}
	return nil
}

func (m *Session) GetAccessTokens() map[string]*StoredToken {
	if m != nil {
		return m.AccessTokens
	}
	return nil
}

func (m *Session) GetRefreshTokens() map[string]*StoredToken {
	if m != nil {
		return m.RefreshTokens
	}
	return nil
}

// StoredToken represents the session-persisted state of a token
// we issued to a user
type StoredToken struct {
	TokenType TokenType `protobuf:"varint,1,opt,name=token_type,json=tokenType,proto3,enum=deci.corestate.v1beta1.TokenType" json:"token_type,omitempty"`
	// bcrypted version of the token that was issued to the user
	Bcrypted []byte `protobuf:"bytes,2,opt,name=bcrypted,proto3" json:"bcrypted,omitempty"`
	// when this token expires
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// if this token has been forced expired
	Expired              bool     `protobuf:"varint,4,opt,name=expired,proto3" json:"expired,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoredToken) Reset()         { *m = StoredToken{} }
func (m *StoredToken) String() string { return proto.CompactTextString(m) }
func (*StoredToken) ProtoMessage()    {}
func (*StoredToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}

func (m *StoredToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoredToken.Unmarshal(m, b)
}
func (m *StoredToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoredToken.Marshal(b, m, deterministic)
}
func (m *StoredToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredToken.Merge(m, src)
}
func (m *StoredToken) XXX_Size() int {
	return xxx_messageInfo_StoredToken.Size(m)
}
func (m *StoredToken) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredToken.DiscardUnknown(m)
}

var xxx_messageInfo_StoredToken proto.InternalMessageInfo

func (m *StoredToken) GetTokenType() TokenType {
	if m != nil {
		return m.TokenType
	}
	return TokenType_UNKNOWN
}

func (m *StoredToken) GetBcrypted() []byte {
	if m != nil {
		return m.Bcrypted
	}
	return nil
}

func (m *StoredToken) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *StoredToken) GetExpired() bool {
	if m != nil {
		return m.Expired
	}
	return false
}

// UserToken is the value we issue directly to users. The message is serialized,
// then base64 encoded to make up the issued version.
type UserToken struct {
	// The type of token this actually id
	TokenType TokenType `protobuf:"varint,1,opt,name=token_type,json=tokenType,proto3,enum=deci.corestate.v1beta1.TokenType" json:"token_type,omitempty"`
	// the ID of the session this token corresponds to
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// identifier of this token, to look it up
	TokenId string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// the token itself, to be compared to the bcrypt version on the backend
	Token                []byte   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToken) Reset()         { *m = UserToken{} }
func (m *UserToken) String() string { return proto.CompactTextString(m) }
func (*UserToken) ProtoMessage()    {}
func (*UserToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}

func (m *UserToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToken.Unmarshal(m, b)
}
func (m *UserToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToken.Marshal(b, m, deterministic)
}
func (m *UserToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToken.Merge(m, src)
}
func (m *UserToken) XXX_Size() int {
	return xxx_messageInfo_UserToken.Size(m)
}
func (m *UserToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserToken proto.InternalMessageInfo

func (m *UserToken) GetTokenType() TokenType {
	if m != nil {
		return m.TokenType
	}
	return TokenType_UNKNOWN
}

func (m *UserToken) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *UserToken) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *UserToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func init() {
	proto.RegisterEnum("deci.corestate.v1beta1.TokenType", TokenType_name, TokenType_value)
	proto.RegisterEnum("deci.corestate.v1beta1.AuthRequest_ResponseType", AuthRequest_ResponseType_name, AuthRequest_ResponseType_value)
	proto.RegisterType((*AuthRequest)(nil), "deci.corestate.v1beta1.AuthRequest")
	proto.RegisterType((*Session)(nil), "deci.corestate.v1beta1.Session")
	proto.RegisterMapType((map[string]*StoredToken)(nil), "deci.corestate.v1beta1.Session.AccessTokensEntry")
	proto.RegisterMapType((map[string]*StoredToken)(nil), "deci.corestate.v1beta1.Session.RefreshTokensEntry")
	proto.RegisterType((*StoredToken)(nil), "deci.corestate.v1beta1.StoredToken")
	proto.RegisterType((*UserToken)(nil), "deci.corestate.v1beta1.UserToken")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xfe, 0x39, 0xff, 0x3d, 0x49, 0xaa, 0x74, 0x55, 0x55, 0x6e, 0x7e, 0x02, 0xd2, 0x70, 0x89,
	0x38, 0xb8, 0x6d, 0xb8, 0x50, 0x4e, 0x0d, 0x21, 0xa8, 0x55, 0x51, 0x2a, 0x6d, 0x12, 0x10, 0x5c,
	0x2c, 0xc7, 0x3b, 0x6d, 0xad, 0xb6, 0x5e, 0xb3, 0xbb, 0x29, 0xf8, 0x55, 0x90, 0x78, 0x09, 0x9e,
	0x80, 0x47, 0x43, 0xde, 0x75, 0x82, 0xdb, 0x52, 0xe0, 0xd0, 0xdb, 0x7e, 0x33, 0xf3, 0xcd, 0xce,
	0xcc, 0x7e, 0x3b, 0xd0, 0x94, 0x8a, 0x0b, 0xff, 0x0c, 0xdd, 0x58, 0x70, 0xc5, 0xc9, 0x26, 0xc3,
	0x20, 0x74, 0x03, 0x2e, 0x50, 0x2a, 0x5f, 0xa1, 0x7b, 0xbd, 0x37, 0x47, 0xe5, 0xef, 0xb5, 0x9f,
	0x9c, 0x71, 0x7e, 0x76, 0x89, 0x3b, 0x3a, 0x6a, 0xbe, 0x38, 0xdd, 0x51, 0xe1, 0x55, 0x1a, 0x72,
	0x15, 0x1b, 0x62, 0xfb, 0xf1, 0xed, 0x80, 0xcf, 0xc2, 0x8f, 0x63, 0x14, 0x32, 0xf3, 0x6f, 0xdd,
	0xf6, 0xfb, 0x51, 0x62, 0x5c, 0xdd, 0xaf, 0x05, 0xa8, 0x0f, 0x16, 0xea, 0x9c, 0xe2, 0xa7, 0x05,
	0x4a, 0x45, 0xfe, 0x07, 0x3b, 0xb8, 0x0c, 0x31, 0x52, 0x5e, 0xc8, 0x1c, 0xab, 0x63, 0xf5, 0x6c,
	0x5a, 0x33, 0x86, 0x23, 0x46, 0xb6, 0xa1, 0x21, 0x90, 0x85, 0x02, 0x03, 0xe5, 0x2d, 0x44, 0xe8,
	0x14, 0xb4, 0xbf, 0xbe, 0xb4, 0xcd, 0x44, 0x48, 0x36, 0xa0, 0xac, 0x8b, 0x77, 0x8a, 0xda, 0x67,
	0x00, 0xd9, 0x84, 0x8a, 0x0c, 0x78, 0x8c, 0xd2, 0x29, 0x75, 0x8a, 0x3d, 0x9b, 0x66, 0x28, 0x8d,
	0x8e, 0x78, 0x14, 0xa0, 0x53, 0x36, 0xd1, 0x1a, 0x90, 0x19, 0x34, 0x05, 0xca, 0x98, 0x47, 0x12,
	0x3d, 0x95, 0xc4, 0xe8, 0x54, 0x3a, 0x56, 0x6f, 0xad, 0xbf, 0xeb, 0xfe, 0x7e, 0x3e, 0x6e, 0xae,
	0x7e, 0x97, 0x66, 0xc4, 0x69, 0x12, 0x23, 0x6d, 0x88, 0x1c, 0xea, 0xee, 0x42, 0x23, 0xef, 0x25,
	0x75, 0xa8, 0xce, 0xc6, 0xc7, 0xe3, 0x93, 0xf7, 0xe3, 0xd6, 0x7f, 0xa4, 0x06, 0xa5, 0xe1, 0xc9,
	0xeb, 0x51, 0xcb, 0x22, 0x36, 0x94, 0xa7, 0x27, 0xc7, 0xa3, 0x71, 0xab, 0xd0, 0xfd, 0x5e, 0x82,
	0xea, 0x04, 0xa5, 0x0c, 0x79, 0xf4, 0xe7, 0xc1, 0xfc, 0xea, 0xaf, 0x70, 0xa3, 0xbf, 0x5d, 0xa8,
	0x5d, 0xa1, 0xf2, 0x99, 0xaf, 0x7c, 0x3d, 0x90, 0x7a, 0x7f, 0xc3, 0x35, 0x6f, 0xe1, 0x2e, 0xdf,
	0xc2, 0x1d, 0x44, 0x09, 0x5d, 0x45, 0x91, 0x03, 0xb0, 0xfd, 0x85, 0x3a, 0xf7, 0x02, 0xce, 0xd0,
	0x29, 0x69, 0xca, 0xd3, 0xfb, 0xfa, 0x9e, 0x28, 0x2e, 0x90, 0x4d, 0xf9, 0x05, 0x46, 0xb4, 0x96,
	0xb2, 0x86, 0x9c, 0x21, 0x79, 0x07, 0x4d, 0x3f, 0x08, 0x50, 0x4a, 0x4f, 0xa5, 0x1e, 0xe9, 0x94,
	0x3b, 0xc5, 0x5e, 0xbd, 0xbf, 0x77, 0x6f, 0x16, 0xd3, 0xa0, 0x3b, 0xd0, 0x24, 0x9d, 0x4d, 0x8e,
	0x22, 0x25, 0x12, 0xda, 0xf0, 0x73, 0x26, 0xf2, 0x01, 0xd6, 0x04, 0x9e, 0x0a, 0x94, 0xe7, 0xcb,
	0xc4, 0x15, 0x9d, 0xb8, 0xff, 0xb7, 0xc4, 0xd4, 0xb0, 0xf2, 0x99, 0x9b, 0x22, 0x6f, 0x6b, 0x33,
	0x58, 0xbf, 0x73, 0x3b, 0x69, 0x41, 0xf1, 0x02, 0x93, 0x6c, 0xd4, 0xe9, 0x91, 0xec, 0x43, 0xf9,
	0xda, 0xbf, 0x5c, 0xa0, 0xd6, 0xdd, 0x3f, 0xce, 0xc5, 0x30, 0x5e, 0x16, 0x5e, 0x58, 0x6d, 0x04,
	0x72, 0xb7, 0x94, 0x07, 0xbf, 0xa6, 0xfb, 0xc3, 0x82, 0x7a, 0xce, 0x45, 0x0e, 0x00, 0xf4, 0xbc,
	0x8c, 0x94, 0x2d, 0x2d, 0xe5, 0xed, 0xfb, 0x72, 0x6a, 0x8a, 0xd6, 0xae, 0xad, 0x96, 0x47, 0xd2,
	0x86, 0xda, 0x3c, 0x10, 0x49, 0xac, 0x90, 0xe9, 0x9a, 0x1a, 0x74, 0x85, 0xc9, 0x3e, 0x00, 0x7e,
	0x89, 0x43, 0x81, 0xd2, 0xf3, 0x55, 0xa6, 0xb1, 0xf6, 0x1d, 0x8d, 0x4d, 0x97, 0x0b, 0x83, 0xda,
	0x59, 0xf4, 0x40, 0x11, 0x07, 0xaa, 0x06, 0x30, 0x2d, 0xb4, 0x1a, 0x5d, 0xc2, 0xee, 0x37, 0x0b,
	0xec, 0x99, 0x44, 0xf1, 0x50, 0x0d, 0x3c, 0x02, 0x90, 0x46, 0x0c, 0xe9, 0xe7, 0x31, 0x5b, 0xc3,
	0xce, 0x2c, 0x47, 0x8c, 0x6c, 0x41, 0xcd, 0x5c, 0x10, 0xb2, 0x6c, 0x6d, 0x54, 0x35, 0x3e, 0x62,
	0xe9, 0x82, 0xd0, 0x47, 0x5d, 0x61, 0x83, 0x1a, 0xf0, 0xec, 0x2d, 0xd8, 0xab, 0x7b, 0x6e, 0x7e,
	0xe3, 0x26, 0xd8, 0x83, 0xd9, 0xf4, 0xd0, 0xcb, 0xfe, 0x72, 0x0b, 0x1a, 0x83, 0xe1, 0x70, 0x34,
	0x99, 0x78, 0xd9, 0x97, 0x26, 0xeb, 0xd0, 0xa4, 0xa3, 0x37, 0x74, 0x34, 0x39, 0xcc, 0x4c, 0xc5,
	0x57, 0xf5, 0x8f, 0xf6, 0xaa, 0x8f, 0x79, 0x45, 0xcf, 0xec, 0xf9, 0xcf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x18, 0x22, 0xca, 0x6e, 0x9b, 0x05, 0x00, 0x00,
}
